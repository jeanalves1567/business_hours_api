// <auto-generated />
using System;
using BusinessHours.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusinessHours.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220402102815_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("BusinessHours.Domain.Entities.BusinessHoursRule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("name");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("timezone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("rules");
                });

            modelBuilder.Entity("BusinessHours.Domain.Entities.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("external_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("name");

                    b.Property<string>("RuleId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rule_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.HasIndex("RuleId");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("BusinessHours.Domain.Entities.Holiday", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id");

                    b.Property<bool>("AllDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("all_day");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("Day")
                        .HasColumnType("int")
                        .HasColumnName("day");

                    b.Property<string>("Finish")
                        .HasColumnType("longtext")
                        .HasColumnName("finish");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("month");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Start")
                        .HasColumnType("longtext")
                        .HasColumnName("start");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("holidays");
                });

            modelBuilder.Entity("BusinessHours.Domain.Entities.RuleHoliday", b =>
                {
                    b.Property<string>("RuleId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rule_id");

                    b.Property<string>("HolidayId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("holiday_id");

                    b.HasKey("RuleId", "HolidayId");

                    b.HasIndex("HolidayId");

                    b.ToTable("rules_holidays");
                });

            modelBuilder.Entity("BusinessHours.Domain.Entities.WorkHours", b =>
                {
                    b.Property<string>("RuleId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rule_id");

                    b.Property<string>("Day")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("day");

                    b.Property<string>("Finish")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("finish");

                    b.Property<bool>("Open")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("open");

                    b.Property<string>("Start")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("start");

                    b.HasKey("RuleId", "Day");

                    b.ToTable("work_hours");
                });

            modelBuilder.Entity("BusinessHours.Domain.Entities.Department", b =>
                {
                    b.HasOne("BusinessHours.Domain.Entities.BusinessHoursRule", "Rule")
                        .WithMany("Departments")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Rule");
                });

            modelBuilder.Entity("BusinessHours.Domain.Entities.RuleHoliday", b =>
                {
                    b.HasOne("BusinessHours.Domain.Entities.Holiday", "Holiday")
                        .WithMany("Rules")
                        .HasForeignKey("HolidayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessHours.Domain.Entities.BusinessHoursRule", "Rule")
                        .WithMany("Holidays")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Holiday");

                    b.Navigation("Rule");
                });

            modelBuilder.Entity("BusinessHours.Domain.Entities.WorkHours", b =>
                {
                    b.HasOne("BusinessHours.Domain.Entities.BusinessHoursRule", "Rule")
                        .WithMany("WorkHours")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rule");
                });

            modelBuilder.Entity("BusinessHours.Domain.Entities.BusinessHoursRule", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Holidays");

                    b.Navigation("WorkHours");
                });

            modelBuilder.Entity("BusinessHours.Domain.Entities.Holiday", b =>
                {
                    b.Navigation("Rules");
                });
#pragma warning restore 612, 618
        }
    }
}
